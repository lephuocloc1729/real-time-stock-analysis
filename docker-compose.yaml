version: "3.8"
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: stock_market
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9093:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  init-db:
    build:
      context: .
      dockerfile: database/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    command: ["sh", "-c", "sleep 45 && python init_db.py"]
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: stock_market
      DB_USER: postgres
      DB_PASSWORD: postgres

  init-kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    depends_on:
      - kafka
    entrypoint:
      ["/bin/sh", "-c", "sleep 50 && /app/scripts/create_kafka_topic.sh"]
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: stock_data
    volumes:
      - ./scripts:/app/scripts

  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: stock_market
      DB_USER: postgres
      DB_PASSWORD: postgres
    ports:
      - "5001:5000"
    depends_on:
      - init-db

  producer:
    build:
      context: .
      dockerfile: kafka/Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
      ALPHA_VANTAGE_API_KEY: ${ALPHA_VANTAGE_API_KEY}
    depends_on:
      - init-kafka
    command: ["sh", "-c", "sleep 60 && python producer.py"]

  consumer:
    build:
      context: .
      dockerfile: kafka/Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: stock_market
      DB_USER: postgres
      DB_PASSWORD: postgres
    depends_on:
      - init-kafka
      - init-db
    command: ["sh", "-c", "sleep 60 && python consumer.py"]

volumes:
  db_data:
